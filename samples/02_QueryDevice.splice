{
  "version": "1013001",
  "info": {
    "hostAppName": "Splice Standalone",
    "hostAppVersion": "1.0"
  },
  "nodes": [
    {
      "name": "DGNode",
      "dependencies": {},
      "bindings": [
        {
          "operator": {
            "name": "hydraOp",
            "entry": "hydraOp",
            "filename": "hydraOp.kl",
            "kl": "require InlineDrawing;\nrequire RazerHydra;\nrequire Singletons;\n\noperator hydraOp(io DrawingHandle handle, io RazerHydraController hydra, in Scalar time)\n{\n  if(handle.isEmpty()) {\n    PolygonMesh mesh();\n    mesh.addCuboid(Xfo(), 1, 1, 1, true, true);\n    InlineMeshShape shape('cube', mesh);\n    \n    InlineTransform controllers = StaticInlineTransform('controllers', handle.getRootTransform(), Xfo());\n    controllers.setLocalCount(2);\n\n    InlineShader shader = handle.getDrawing().registerShader(OGLSurfaceShader());\n    InlineMaterial mat = shader.getOrCreateMaterial('mat');    \n    \n    InlineInstance instance('controllers', controllers, shape);\n    instance.addMaterial(mat);\n\n    instance.setTransformUniform(InlineUniform('u_diffuseColor', Color(1.0, 0.0, 0.0)), 0);\n    instance.setTransformUniform(InlineUniform('u_diffuseColor', Color(0.0, 1.0, 0.0)), 1);\n  }\n  \n  hydra.update();\n\n  Xfo xfo[2];\n  xfo[0].tr = hydra.controls[0].pos * 0.05;\n  xfo[1].tr = hydra.controls[1].pos * 0.05;\n  xfo[0].ori = hydra.controls[0].rot_quat;\n  xfo[1].ori = hydra.controls[1].rot_quat;\n  \n  xfo[0].sc = xfo[1].sc *= 2.0;\n\n  for(Size i=0;i<2;i++) {  \n    if(hydra.controls[i].buttons & SIXENSE_BUTTON_1)\n      xfo[i].sc *= 2.5;\n    if(hydra.controls[i].buttons & SIXENSE_BUTTON_2)\n      xfo[i].sc *= Vec3(0.5, 2, 0.5);\n    if(hydra.controls[i].buttons & SIXENSE_BUTTON_BUMPER)\n      xfo[i].sc *= Vec3(2, 0.5, 0.5);\n    xfo[i].sc *= Vec3(1, 1, 1).linearInterpolate(Vec3(3, 0.1, 3), hydra.controls[i].trigger);\n  }\n\n  InlineTransform controllers = handle.getRootTransform().getChild('controllers');\n  controllers.setLocalXfo(0, xfo[0]);  \n  controllers.setLocalXfo(1, xfo[1]);\n}\n",
            "portmap": {}
          }
        }
      ]
    }
  ],
  "extensions": [
    "RazerHydra"
  ],
  "ports": [
    {
      "name": "handle",
      "node": "DGNode",
      "graph": "02_QueryDevice",
      "type": "DrawingHandle",
      "autoInitObjects": true,
      "member": "handle",
      "mode": "io",
      "persistence": false
    },
    {
      "name": "hydra",
      "node": "DGNode",
      "graph": "02_QueryDevice",
      "type": "RazerHydraController",
      "autoInitObjects": true,
      "member": "hydra",
      "mode": "io",
      "persistence": false
    },
    {
      "name": "time",
      "node": "DGNode",
      "graph": "02_QueryDevice",
      "type": "Scalar",
      "autoInitObjects": true,
      "member": "time",
      "mode": "in",
      "persistence": false
    }
  ]
}